#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- cryaudioimpl.waf_files --
sources_platform(ALL)
add_sources("CryAudioImpl_uber_0.cpp"
	SOURCE_GROUP "Header Files"
		"BaseObject.h"
		"Common.h"
		"CVars.h"
		"Debug.h"
		"Environment.h"
		"Event.h"
		"File.h"
		"GlobalData.h"
		"GlobalObject.h"
		"Impl.h"
		"IoInterface.h"
		"Listener.h"
		"Object.h"
		"Parameter.h"
		"resource.h"
		"Setting.h"
		"StandaloneFile.h"
		"stdafx.h"
		"SwitchState.h"
		"Trigger.h"
	SOURCE_GROUP "Source Files"
		"BaseObject.cpp"
		"Common.cpp"
		"CryAudioImpl.cpp"
		"CVars.cpp"
		"Debug.cpp"
		"Event.cpp"
		"GlobalObject.cpp"
		"Impl.cpp"
		"IoInterface.cpp"
		"Listener.cpp"
		"Object.cpp"
		"Setting.cpp"
)

add_sources("NoUberFile"
	SOURCE_GROUP "Root"
		"stdafx.cpp"
)

end_sources()
#END-FILE-LIST

if(AUDIO_ADX2)
	if(WINDOWS)
		set( ADX2_PLATFORM_FOLDER pc )
		set( ADX2_LIB_FOLDER x64 )
		set( ADX2_LIBS
			cri_base_pcx64
			cri_framework_pcx64
			cri_file_system_pcx64
			cri_atom_pcx64
			cri_atom_monitor_pcx64
			cri_mana_pcx64
		)
	endif()

	CryEngineModule(CryAudioImplAdx2 FORCE_SHARED_WIN PCH "stdafx.cpp" SOLUTION_FOLDER "CryEngine/Audio/Implementations")
	target_include_directories(${THIS_PROJECT} PRIVATE ../../Common "${SDK_DIR}/Audio/adx2/SDK/${ADX2_PLATFORM_FOLDER}/include" )

	set( ADX2_LIB_Path "${SDK_DIR}/Audio/adx2/SDK/${ADX2_PLATFORM_FOLDER}/libs/${ADX2_LIB_FOLDER}/" )
	make_library(ADX2_LIBS "${ADX2_LIB_Path}")
	target_link_libraries( ${THIS_PROJECT} PRIVATE ${ADX2_LIBS} )

	if (ORBIS OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
		target_compile_options(${THIS_PROJECT} PRIVATE
			-Wno-format
		)
	elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
		target_compile_options(${THIS_PROJECT} PRIVATE
			-Wno-format
		)
	endif()

else()
	CryFileContainer(CryAudioImplAdx2 SOLUTION_FOLDER "CryEngine/Audio/Implementations")
endif()