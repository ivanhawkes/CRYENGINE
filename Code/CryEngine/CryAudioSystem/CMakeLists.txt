#START-FILE-LIST
# File List auto generated by waf2cmake.py, do not modify manually.

start_sources()
# -- cryaudiosystem.waf_files --
sources_platform(ALL)
add_sources("CryAudioSystem_uber_0.cpp"
	SOURCE_GROUP "Header Files"
		"ATL.h"
		"ATLAudioObject.h"
		"AudioEventManager.h"
		"ATLEntities.h"
		"ATLUtils.h"
		"AudioInternalInterfaces.h"
		"AudioSystem.h"
		"AudioImpl.h"
		"FileCacheManager.h"
		"GlobalTypedefs.h"
		"resource.h"
		"AudioCVars.h"
		"PropagationProcessor.h"
		"AudioStandaloneFileManager.h"
		"AudioObjectManager.h"
		"AudioListenerManager.h"
		"AudioEventListenerManager.h"
		"AudioXMLProcessor.h"
		"InternalEntities.h"
		"Common.h"
	SOURCE_GROUP "Source Files"
		"ATL.cpp"
		"ATLAudioObject.cpp"
		"AudioEventManager.cpp"
		"ATLEntities.cpp"
		"AudioRequests.cpp"
		"AudioSystem.cpp"
		"AudioImpl.cpp"
		"CryAudioSystem.cpp"
		"FileCacheManager.cpp"
		"AudioCVars.cpp"
		"PropagationProcessor.cpp"
		"AudioStandaloneFileManager.cpp"
		"AudioObjectManager.cpp"
		"AudioListenerManager.cpp"
		"AudioEventListenerManager.cpp"
		"AudioXMLProcessor.cpp"
		"InternalEntities.cpp"
		"Common.cpp"
)

add_sources("NoUberFile"
	SOURCE_GROUP "Root"
		"stdafx.cpp"
		"stdafx.h"
)

end_sources()
#END-FILE-LIST

MACRO(setup_cryaudio)
	target_include_directories(${THIS_PROJECT} PRIVATE Common)
	if(DURANGO)
		target_link_libraries(${THIS_PROJECT} PRIVATE acphal)
	endif()
	if (ORBIS OR CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
		target_compile_options(${THIS_PROJECT} PRIVATE
			-Wno-unknown-pragmas
			-Wno-unused-variable
			-Wno-reorder
			-Wno-parentheses
			-Wno-format
			-Wno-switch
			-Wno-unused-value
			-Wno-comment
			-Wno-empty-body
			-Wno-format-security
			-Wno-unused-function
			-Wno-multichar
			-Wno-unused-private-field
		)
    elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
		target_compile_options(${THIS_PROJECT} PRIVATE
			-Wno-unused-function
			-Wno-unused-value
			-Wno-unused-variable
			-Wno-sign-compare
			-Wno-ignored-attributes
			-Wno-invalid-offsetof
			-Wno-aligned-new
			-Wno-int-in-bool-context
			-Wno-unused-but-set-variable
			-Wno-misleading-indentation
			-Wno-unknown-pragmas
			-Wno-strict-aliasing
			-Wno-maybe-uninitialized
			-Wno-multichar
			-Wno-char-subscripts
			-Wno-conversion-null
			-Wno-parentheses
			-Wno-comment
			-Wno-reorder
			-Wno-address
			-Wno-format
			-Wno-switch
		)
    endif()
ENDMACRO()

CryEngineModule(CryAudioSystem PCH "stdafx.cpp" SOLUTION_FOLDER "CryEngine/Audio")
setup_cryaudio()
if (OPTION_UNIT_TEST AND NOT OPTION_STATIC_LINKING) #Currently an additional static lib is only used by unit testing under non-monolithic mode
	CryEngineModule(CryAudioSystemLib PCH "stdafx.cpp" SOLUTION_FOLDER "CryEngine/Audio" FORCE_STATIC)
	setup_cryaudio()
endif()
